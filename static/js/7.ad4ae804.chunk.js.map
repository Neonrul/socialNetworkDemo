{"version":3,"sources":["Components/Users/UsersContainer.js"],"names":["ACObject","setCurrentPage","getUsersFromServer","followUser","unfollowUser","setCurrentPortion","compose","connect","state","props","currentPortion","getCurrentPortion","portionSize","getPortionSize","portions","getTotalPortions","users","getUsersFromState","currentPage","getCurrentPage","followingInProgress","getFollowingInProgress","pages","getTotalPages","isFetching","getIsFetching","name","useEffect","pageSize","onPageChanged","page","portion"],"mappings":"wHAAA,4EA4DIA,EAAW,CAACC,mBAAgBC,uBAAoBC,eAAYC,iBAAcC,uBAE/DC,sBACXC,aAfoB,SAACC,EAAOC,GACxB,MAAO,CACHC,eAAgBC,YAAkBH,EAAOC,GACzCG,YAAaC,YAAeL,EAAOC,GACnCK,SAAUC,YAAiBP,EAAOC,GAClCO,MAAOC,YAAkBT,EAAOC,GAChCS,YAAaC,YAAeX,EAAOC,GACnCW,oBAAqBC,YAAuBb,EAAOC,GACnDa,MAAOC,YAAcf,EAAOC,GAC5Be,WAAYC,YAAcjB,EAAOC,MAMhBT,GADdM,EA3CQ,SAACG,GACpB,IAAMiB,EAAO,UACbC,qBAAU,WACNlB,EAAMP,mBAAmBwB,EAAMjB,EAAMS,YAAaT,EAAMmB,YACzD,CAACnB,EAAMS,cAOV,OAAO,6BACFT,EAAMe,WAAa,kBAAC,IAAD,MAAe,KACnC,kBAAC,IAAD,CACIE,KAAMA,EACNhB,eAAgBD,EAAMC,eACtBE,YAAaH,EAAMG,YACnBE,SAAUL,EAAMK,SAChBI,YAAaT,EAAMS,YACnBW,cAbc,SAACC,EAAMC,GACzBtB,EAAMR,eAAeyB,EAAMI,GAC3BrB,EAAMJ,kBAAkBqB,EAAMK,IAY1Bf,MAAOP,EAAMO,MACbI,oBAAqBX,EAAMW,oBAC3BjB,WAAYM,EAAMN,WAClBC,aAAcK,EAAML,aACpBkB,MAAOb,EAAMa","file":"static/js/7.ad4ae804.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    followUser,\r\n    getUsersFromServer,\r\n    setCurrentPage,\r\n    setCurrentPortion,\r\n    unfollowUser\r\n} from '../../Redux/usersReducer'\r\nimport Users from './Users'\r\nimport Preloader from '../Common/Preloader/Preloader'\r\nimport { compose } from 'redux'\r\nimport {\r\n    getCurrentPage, getCurrentPortion,\r\n    getFollowingInProgress, getIsFetching,\r\n    getPortionSize, getTotalPages, getTotalPortions,\r\n    getUsersFromState\r\n} from '../../Redux/UsersSelectors'\r\n\r\nconst UsersContainer = (props) => {\r\n    const name = 'regular'\r\n    useEffect(() => {\r\n        props.getUsersFromServer(name, props.currentPage, props.pageSize)\r\n    }, [props.currentPage])\r\n\r\n    const onPageChanged = (page, portion) => {\r\n        props.setCurrentPage(name, page)\r\n        props.setCurrentPortion(name, portion)\r\n    }\r\n\r\n    return <div>\r\n        {props.isFetching ? <Preloader/> : null}\r\n        <Users\r\n            name={name}\r\n            currentPortion={props.currentPortion}\r\n            portionSize={props.portionSize}\r\n            portions={props.portions}\r\n            currentPage={props.currentPage}\r\n            onPageChanged={onPageChanged}\r\n            users={props.users}\r\n            followingInProgress={props.followingInProgress}\r\n            followUser={props.followUser}\r\n            unfollowUser={props.unfollowUser}\r\n            pages={props.pages}\r\n        />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n        return {\r\n            currentPortion: getCurrentPortion(state, props),\r\n            portionSize: getPortionSize(state, props),\r\n            portions: getTotalPortions(state, props),\r\n            users: getUsersFromState(state, props),\r\n            currentPage: getCurrentPage(state, props),\r\n            followingInProgress: getFollowingInProgress(state, props),\r\n            pages: getTotalPages(state, props),\r\n            isFetching: getIsFetching(state, props)\r\n        }\r\n    },\r\n    ACObject = {setCurrentPage, getUsersFromServer, followUser, unfollowUser, setCurrentPortion}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, ACObject)\r\n)(UsersContainer)"],"sourceRoot":""}