{"version":3,"sources":["Components/Login/LoginForm.js","Components/Login/LoginContainer.js"],"names":["LoginForm","handleSubmit","captchaImg","error","onSubmit","Field","component","FormControl","name","typeField","validate","required","placeholder","type","src","className","s","formSummaryError","LoginReduxForm","reduxForm","form","AC","postLoginData","connect","state","isAuth","getIsAuth","captcha","getCaptcha","props","to"],"mappings":"yMAgDeA,EA1CG,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,aAAaC,EAAsB,EAAtBA,WAAWC,EAAW,EAAXA,MACxC,OACI,0BAAMC,SAAUH,GACZ,6BACI,kBAACI,EAAA,EAAD,CAAOC,UAAWC,IACXC,KAAM,QACNC,UAAW,QACXC,SAAUC,IACVC,YAAa,YAExB,6BACI,kBAACP,EAAA,EAAD,CAAOC,UAAWC,IACXC,KAAM,OACNC,UAAW,QACXC,SAAUC,IACVC,YAAa,WACbC,KAAM,cAEjB,6BACI,kBAACR,EAAA,EAAD,CAAOC,UAAWC,IACXE,UAAW,QACXD,KAAM,QACNK,KAAM,aAJjB,eAMCX,GACD,6BACI,yBAAKY,IAAKZ,IACV,kBAACG,EAAA,EAAD,CAAOC,UAAWC,IACXC,KAAM,UACNC,UAAW,QACXC,SAAUC,OAEpBR,GAAS,yBAAKY,UAAWC,IAAEC,kBACvBd,GAEL,6BACI,6C,gBClCVe,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,CAA2BnB,GAiB9CqB,EAAK,CAACC,mBAGKC,uBAPO,SAACC,GAAD,MAAY,CAC1BC,OAAQC,YAAUF,GAClBG,QAASC,YAAWJ,MAKYH,EAAzBE,EAlBM,SAACM,GACd,OAAIA,EAAMJ,OACC,kBAAC,IAAD,CAAUK,GAAI,aAGrB,6BACI,sCACA,kBAACZ,EAAD,CAAgBd,SAAUyB,EAAMP,cAAepB,WAAY2B,EAAMF","file":"static/js/6.9fbdafd2.chunk.js","sourcesContent":["import { Field } from 'redux-form'\r\nimport React from 'react'\r\nimport { FormControl } from '../Common/FormsControls/FormsControls'\r\nimport { required } from '../../utils/validators/validators'\r\nimport s from '../Common/FormsControls/FormControls.module.css'\r\n\r\nconst LoginForm = ({handleSubmit,captchaImg,error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field component={FormControl}\r\n                       name={'login'}\r\n                       typeField={'input'}\r\n                       validate={required}\r\n                       placeholder={'E-mail'}/>\r\n            </div>\r\n            <div>\r\n                <Field component={FormControl}\r\n                       name={'pass'}\r\n                       typeField={'input'}\r\n                       validate={required}\r\n                       placeholder={'Password'}\r\n                       type={'password'}/>\r\n            </div>\r\n            <div>\r\n                <Field component={FormControl}\r\n                       typeField={'input'}\r\n                       name={'remMe'}\r\n                       type={'checkbox'}/>Remember me\r\n            </div>\r\n            {captchaImg &&\r\n            <div>\r\n                <img src={captchaImg}/>\r\n                <Field component={FormControl}\r\n                       name={'captcha'}\r\n                       typeField={'input'}\r\n                       validate={required}/>\r\n            </div>}\r\n            {error && <div className={s.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Log-in</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { postLoginData } from '../../Redux/authReducer'\r\nimport { reduxForm } from 'redux-form'\r\nimport LoginForm from './LoginForm'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { getCaptcha, getIsAuth } from '../../Redux/authSelectors'\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm),\r\n\r\n    LoginContainer = (props) => {\r\n        if (props.isAuth) {\r\n            return <Redirect to={'/profile'}/>\r\n        }\r\n        return (\r\n            <div>\r\n                <h1>Log-in</h1>\r\n                <LoginReduxForm onSubmit={props.postLoginData} captchaImg={props.captcha}/>\r\n            </div>\r\n        )\r\n    },\r\n    mapStateToProps = (state) => ({\r\n        isAuth: getIsAuth(state),\r\n        captcha: getCaptcha(state)\r\n    }),\r\n    AC = {postLoginData}\r\n\r\n\r\nexport default connect(mapStateToProps, AC)(LoginContainer)"],"sourceRoot":""}