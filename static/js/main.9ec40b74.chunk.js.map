{"version":3,"sources":["assets/images/demon-face.jpg","API/API.js","Components/Common/SendTextForm/SendTextForm.js","Redux/dialogsReducer.js","utils/object-helper/object-helper.js","Redux/usersReducer.js","Components/FriendPage/FriendPage.module.css","Components/Navbar/FriendsList/Friend/Friend.module.css","assets/images/avatarSmall.jpg","assets/images/Loading.svg","Components/Profile/ProfileInfo/Contacts/Contacts.module.css","Components/Navbar/Navbar.module.css","Redux/profileReducer.js","serviceWorker.js","Components/News/News.js","Components/Music/Music.js","Components/FriendPage/FriendPage.js","Components/Navbar/FriendsList/Friend/Friend.js","Components/Navbar/FriendsList/FriendsList.js","Components/Navbar/Navbar.js","Components/Navbar/NavbarContainer.js","Components/Header/Header.js","Components/Header/HeaderContainer.js","Redux/appReducer.js","Components/Profile/ProfileInfo/Contacts/Contacts.js","Components/Profile/ProfileInfo/ProfileStatusForm.js","Components/Profile/ProfileInfo/ProfileStatus.js","Components/Profile/ProfileInfo/ProfileInfo.js","Components/Profile/My posts/Post/Post.js","Components/Profile/My posts/MyPosts.js","Components/Profile/My posts/MyPostsContainer.js","Components/Profile/Profile.js","Components/Profile/ProfileContainer.js","App.js","Redux/navbarReducer.js","Redux/reduxStore.js","index.js","Components/Profile/ProfileInfo/ProfileInfo.module.css","Redux/authSelectors.js","Redux/authReducer.js","Components/Header/Header.module.css","Components/Common/Preloader/Preloader.js","Redux/ProfileSelector.js","Components/Common/FormsControls/FormsControls.js","Components/Common/FormsControls/FormControls.module.css","utils/validators/validators.js","Components/Navbar/FriendsList/FriendsList.module.css","Components/Profile/My posts/MyPosts.module.css","Components/Profile/My posts/Post/Post.module.css"],"names":["module","exports","instance","axios","withCredentials","headers","baseURL","usersAPIComponent","getUsersFromServer","currentPage","pageSize","get","then","response","data","unfollowUser","userID","delete","followUser","post","profileAPIComponent","getUserProfile","getUserStatus","updateUserStatus","status","put","putUserProfile","profileSettings","postUserPhoto","formData","authenticationAPIComponent","getAuthenticationData","loginUser","email","login","password","pass","rememberMe","remMe","captcha","logoutUser","getCaptcha","maxLength10","maxLengthCreator","SendTextForm","props","onSubmit","handleSubmit","component","FormControl","name","typeField","validate","required","placeholder","placeholderText","btnText","initialState","dialogs","id","messages","message","addMessage","text","type","dialogsReducer","state","action","newMessage","updateObjectInArray","items","itemID","objPropName","newObjectProp","map","i","users","totalCount","isFetching","followingInProgress","portionSize","currentPortion","FOLLOW","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","toggleFollowingProgress","resultCode","follow","userId","unfollow","setCurrentPage","toggleIsFetching","setCurrentPortion","bind","usersReducer","followed","filter","myPosts","likesCount","profile","ADD_POST","addPost","setUsersProfile","setUserStatus","putProfileSettings","form","getState","authentication","stopSubmit","_error","Promise","reject","uploadPhoto","photo","FormData","append","profileReducer","newPost","p","postID","Boolean","window","location","hostname","match","News","Music","FriendPage","className","s","page","src","Friend","path","friend","to","FriendsList","friendsList","f","heading","friendList","Navbar","nav","item","activeClassName","active","NavbarContainer","connect","navbarPage","Header","header","isAuth","loginBlock","Login","onClick","deleteLoginData","Avatar","avatar","avatarSmall","AC","getIsAuth","getUserLogin","getUserAvatar","initialized","appReducer","Contacts","contactsArr","key","contacts","push","href","target","ProfileStatusReduxForm","reduxForm","Field","autoFocus","onBlur","ProfileStatus","useState","editMode","setEditMode","onDoubleClick","currentTarget","value","initialValues","ProfileInfo","avatarPhoto","photos","large","demonJPG","profileInfo","profileName","fullName","profileAboutMe","aboutMe","profileLookingForAJob","lookingForAJob","lookingForAJobDescription","Preloader","Post","like","MyPosts","myPostsElement","AddPostForm","postsBlock","textArea","posts","compose","getUserPosts","React","memo","Profile","MyPostsContainer","authID","getAuthUserID","getUserProfileFromState","getUserStatusFromState","withRouter","useEffect","params","history","DialogsContainer","lazy","LoginContainer","SettingsContainer","UsersContainer","initializeApp","promise","all","app","fallback","render","navbarReducer","reducers","combineReducers","profilePage","dialogsPage","usersPage","authenticationReducer","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store","ReactDOM","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","setAuthUserData","payload","setCaptchaImg","url","small","postLoginData","loading","input","meta","hasError","touched","formControl","createElement","maxLength","length"],"mappings":"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","file":"static/js/main.9ec40b74.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/demon-face.9e71b430.jpg\";","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {'API-KEY': '7dd0dc8a-790e-4d7a-ad6a-f19b0e6ee31f'},\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`\r\n})\r\n\r\nexport const usersAPIComponent = {\r\n        getUsersFromServer(currentPage = 1, pageSize = 10) {\r\n            return (\r\n                instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\r\n            )\r\n        },\r\n        unfollowUser(userID) {\r\n            return (\r\n                instance.delete(`follow/${userID}`).then(response => response.data)\r\n            )\r\n        },\r\n        followUser(userID) {\r\n            return (\r\n                instance.post(`follow/${userID}`).then(response => response.data)\r\n            )\r\n        }\r\n    },\r\n\r\n    profileAPIComponent = {\r\n        getUserProfile(userID) {\r\n            return (\r\n                instance.get(`profile/${userID}`).then(response => response.data)\r\n            )\r\n        },\r\n        getUserStatus(userID) {\r\n            return (\r\n                instance.get(`profile/status/${userID}`).then(response => response.data)\r\n            )\r\n        },\r\n        updateUserStatus(status) {\r\n            return (\r\n                instance.put(`profile/status/`, {status: status}).then(response => response.data)\r\n            )\r\n        },\r\n        putUserProfile(profileSettings) {\r\n            return (\r\n                instance.put(`profile/`, profileSettings).then(response => response.data)\r\n            )\r\n        },\r\n        postUserPhoto(formData) {\r\n            return (\r\n                instance.post('profile/photo', formData)\r\n            )\r\n        }\r\n    },\r\n\r\n    authenticationAPIComponent = {\r\n        getAuthenticationData() {\r\n            return (\r\n                instance.get('auth/me').then(response => response.data)\r\n            )\r\n        },\r\n        loginUser(formData) {\r\n            return (\r\n                instance.post('auth/login', {\r\n                    email: formData.login,\r\n                    password: formData.pass,\r\n                    rememberMe: formData.remMe,\r\n                    captcha: formData.captcha\r\n                }).then(response => response.data)\r\n            )\r\n        },\r\n        logoutUser() {\r\n            return (\r\n                instance.delete('auth/login').then(response => response.data)\r\n            )\r\n        },\r\n        getCaptcha() {\r\n            return (\r\n                instance.get('security/get-captcha-url').then(response => response.data)\r\n            )\r\n        }\r\n    }","import React from 'react'\r\nimport {Field} from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators'\r\nimport {FormControl} from '../FormsControls/FormsControls'\r\n\r\nconst maxLength10 = maxLengthCreator(50),\r\n\r\nSendTextForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={FormControl}\r\n                       name={'textArea'}\r\n                       typeField={'textarea'}\r\n                       validate={[required, maxLength10]}\r\n                       placeholder={props.placeholderText}/>\r\n            </div>\r\n            <div>\r\n                <button>{props.btnText}</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SendTextForm","let initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Agares'},\r\n        {id: 2, name: 'Abigor'},\r\n        {id: 3, name: 'Barbatos'},\r\n        {id: 4, name: 'Bifrons'},\r\n        {id: 5, name: 'Velzevul'},\r\n        {id: 6, name: 'Asmoday'},\r\n        {id: 7, name: 'Baal'}\r\n    ],\r\n\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Fuck you!'},\r\n        {id: 3, message: 'I hate you!'}\r\n    ]\r\n}\r\nconst  ADD_MESSAGE = 'dialog/ADD-MESSAGE',\r\n    dialogsReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n            case ADD_MESSAGE :\r\n                let newMessage = {\r\n                    id: 4,\r\n                    message: action.text\r\n                }\r\n                return {\r\n                    ...state,\r\n                    messages: [...state.messages, newMessage]\r\n                }\r\n            default :\r\n                return state\r\n\r\n        }\r\n    }\r\n\r\nexport const addMessage = (text) => ({type: ADD_MESSAGE,text})\r\n\r\nexport default dialogsReducer","export const updateObjectInArray = (items,itemID,objPropName,newObjectProp) => {\r\n    return items.map(i => {\r\n        if (i[objPropName] === itemID) {\r\n            return {...i, ...newObjectProp}\r\n        }\r\n        return i\r\n    })\r\n}","import { usersAPIComponent } from '../API/API'\r\nimport { updateObjectInArray } from '../utils/object-helper/object-helper'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalCount: 0,\r\n    pageSize: 20,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n    portionSize:15,\r\n    currentPortion:1\r\n}\r\nconst FOLLOW = 'users/FOLLOW',\r\n    UNFOLLOW = 'users/UNFOLLOW',\r\n    SET_USERS = 'users/SET_USERS',\r\n    SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE',\r\n    SET_USERS_COUNT = 'users/SET_USERS_COUNT',\r\n    SET_CURRENT_PORTION = 'SET_CURRENT_PORTION',\r\n    TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING',\r\n    TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n\r\n    usersReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n            case FOLLOW:\r\n                return (\r\n                    {\r\n                        ...state,\r\n                        users: updateObjectInArray(state.users,action.userID,\"id\",{followed:true})\r\n                    }\r\n                )\r\n            case UNFOLLOW:\r\n                return (\r\n                    {\r\n                        ...state,\r\n                        users: updateObjectInArray(state.users,action.userID,\"id\",{followed:false})\r\n                    }\r\n                )\r\n            case SET_USERS:\r\n                return {...state, users: action.users}\r\n            case SET_CURRENT_PAGE:\r\n                return {...state, currentPage: action.currentPage}\r\n            case SET_USERS_COUNT:\r\n                return {...state, totalCount: action.totalCount}\r\n            case SET_CURRENT_PORTION:\r\n                return {...state, currentPortion: action.currentPortion}\r\n            case TOGGLE_IS_FETCHING:\r\n                return {...state, isFetching: action.isFetching}\r\n            case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n                return {\r\n                    ...state,\r\n                    followingInProgress: action.isFetching ?\r\n                        [...state.followingInProgress, action.userID] :\r\n                        [state.followingInProgress.filter(id => id !== action.userID)]\r\n                }\r\n            default :\r\n                return state\r\n        }\r\n    },\r\n    followUnfollowFlow = async (dispatch, userID, apiMethod, actionCreator) => {\r\n        dispatch(toggleFollowingProgress(true, userID))\r\n        let data = await apiMethod(userID)\r\n        if (data.resultCode === 0) {\r\n            dispatch(actionCreator(userID))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userID))\r\n    }\r\nexport const follow = (userId) => ({type: FOLLOW, userID: userId}),\r\n    unfollow = (userId) => ({type: UNFOLLOW, userID: userId}),\r\n    setUsers = (user) => ({type: SET_USERS, users: user}),\r\n    setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage}),\r\n    setUsersCount = (totalCount) => ({type: SET_USERS_COUNT, totalCount: totalCount}),\r\n    toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching: isFetching}),\r\n    setCurrentPortion = (currentPortion) => ({type:SET_CURRENT_PORTION,currentPortion}),\r\n    toggleFollowingProgress = (isFetching, userID) => ({\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching: isFetching,\r\n        userID: userID\r\n    }), getUsersFromServer = (currentPage, pageSize) => async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        let data = await usersAPIComponent.getUsersFromServer(currentPage, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setUsersCount(data.totalCount))\r\n    }, unfollowUser = (userID) => async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userID,usersAPIComponent.unfollowUser.bind(usersAPIComponent),unfollow)\r\n    }, followUser = (userID) => async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userID,usersAPIComponent.followUser.bind(usersAPIComponent),follow)\r\n    }\r\n\r\nexport default usersReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"FriendPage_page__1czqh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__15iqI\"};","module.exports = __webpack_public_path__ + \"static/media/avatarSmall.927d5861.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Loading.a8e4cd68.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__3N7H3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__13B95\",\"item\":\"Navbar_item__174PH\",\"active\":\"Navbar_active__2KOtS\"};","import { profileAPIComponent } from '../API/API'\r\nimport { stopSubmit } from 'redux-form'\r\n\r\nlet initialState = {\r\n    myPosts: [\r\n        {id: 1, message: 'Hi, fuck you!', likesCount: 15},\r\n        {id: 2, message: 'It\\'s my first time', likesCount: 20},\r\n        {id: 3, message: 'I\\'m so tired', likesCount: 1200},\r\n        {id: 4, message: 'HOLY SHIT!!', likesCount: 1},\r\n        {id: 5, message: 'You son of the bitch!', likesCount: 20}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\nconst ADD_POST = 'profile/ADD_POST',\r\n    DELETE_POST = 'profile/DELETE_POST',\r\n    SET_USERS_PROFILE = 'profile/SET_USERS_PROFILE',\r\n    SET_USER_STATUS = 'profile/SET_USER_STATUS',\r\n\r\n    profileReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n            case ADD_POST :\r\n                let newPost = {\r\n                    id: 6,\r\n                    message: action.text,\r\n                    likesCount: 0\r\n                }\r\n                return {\r\n                    ...state,\r\n                    myPosts: [...state.myPosts, newPost]\r\n                }\r\n            case SET_USERS_PROFILE:\r\n                return {\r\n                    ...state,\r\n                    profile: action.profile\r\n                }\r\n            case SET_USER_STATUS:\r\n                return {\r\n                    ...state,\r\n                    status: action.status\r\n                }\r\n            case DELETE_POST:\r\n                return {\r\n                    ...state,\r\n                    myPosts: state.myPosts.filter(p => p.id !== action.postID)\r\n                }\r\n            default :\r\n                return state\r\n        }\r\n    }\r\n\r\nexport const addPost = (text) => ({type: ADD_POST, text}),\r\n    deletePost = (postID) => ({type: DELETE_POST, postID}),\r\n    setUsersProfile = (profile) => ({type: SET_USERS_PROFILE, profile}),\r\n    setUserStatus = (status) => ({type: SET_USER_STATUS, status}),\r\n\r\n    getUserProfile = (userID) => async (dispatch) => {\r\n        const profile = await profileAPIComponent.getUserProfile(userID)\r\n        dispatch(setUsersProfile(profile))\r\n    },\r\n    getUserStatus = (userID) => async (dispatch) => {\r\n        const status = await profileAPIComponent.getUserStatus(userID)\r\n        dispatch(setUserStatus(status))\r\n    },\r\n    updateUserStatus = (status) => async (dispatch) => {\r\n        const response = await profileAPIComponent.updateUserStatus(status)\r\n        if (response.resultCode === 0) {\r\n            dispatch(setUserStatus(status))\r\n        }\r\n    }, putProfileSettings = (form) => async (dispatch, getState) => {\r\n        const userId = getState().authentication.id,\r\n            response = await profileAPIComponent.putUserProfile(form)\r\n        if (response.resultCode === 0) {\r\n            dispatch(getUserProfile(userId))\r\n        } else if (response.resultCode === 1) {\r\n            dispatch(stopSubmit('settings', {_error:response.messages}))\r\n            return Promise.reject(response.messages)\r\n        }\r\n    }, uploadPhoto = (photo) => async (dispatch) => {\r\n        const formData = new FormData()\r\n        formData.append('image', photo)\r\n        await profileAPIComponent.postUserPhoto(formData)\r\n    }\r\n\r\nexport default profileReducer","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport s from './News.module.css'\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News","import React from 'react'\r\nimport s from './Music.module.css'\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","import React from 'react';\r\nimport s from './FriendPage.module.css';\r\n\r\nconst FriendPage = (props) => {\r\n    return (\r\n        <div className={s.page}>\r\n            <img src='https://www.digitalvertigo.co.uk/forum/uploads//monthly_05_2016/post-3489-0-19929300-1462982286.jpg' />\r\n            Friend Name\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FriendPage;","import React from 'react';\r\nimport s from './Friend.module.css';\r\nimport { NavLink } from 'react-router-dom'\r\nconst Friend = (props) => {\r\n    let path = '/friend/' + props.id\r\n       return (\r\n       <div className={s.friend}>\r\n           <img src='https://www.digitalvertigo.co.uk/forum/uploads//monthly_05_2016/post-3489-0-19929300-1462982286.jpg'/>\r\n           <NavLink to={path}>\r\n               {props.friend}\r\n           </NavLink>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport  default Friend;","import React from 'react';\r\nimport s from './FriendsList.module.css';\r\nimport Friend from './Friend/Friend'\r\n\r\nconst FriendsList = (props) => {\r\n    let friendsList = props.friendsList.map(f => <Friend friend={f.friend} id={f.id}/>)\r\n    return (\r\n       <div>\r\n           <div className={s.heading}>\r\n               Friends\r\n           </div>\r\n           <div className={s.friendList}>\r\n               {friendsList}\r\n           </div>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport  default FriendsList;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom'\r\nimport FriendList from './FriendsList/FriendsList'\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/dialogs' activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/music' activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/settings' activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n            <div>\r\n                <FriendList friendsList ={props.friendsList}/>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport  default Navbar;","import React from 'react'\r\nimport Navbar from './Navbar'\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStoreToProps = (state) => {\r\n    return {\r\n        friendsList: state.navbarPage.friendsList\r\n    }\r\n},\r\n    ACObject={},\r\n\r\n    NavbarContainer = connect(mapStoreToProps,ACObject)(Navbar)\r\n\r\nexport default NavbarContainer","import React from 'react'\r\nimport s from './Header.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport avatarSmall from '../../assets/images/avatarSmall.jpg'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://i.pinimg.com/originals/3e/2b/1b/3e2b1b5712ffe85a54cdf214d280ce10.jpg'/>\r\n                {props.isAuth ?\r\n                    <div className={s.loginBlock}>\r\n                        <div className={s.Login}>{props.login}</div>\r\n                        <button onClick={props.deleteLoginData}>Log-out</button>\r\n                        <img className={s.Avatar} src={props.avatar ? props.avatar :avatarSmall}/>\r\n                    </div> :\r\n                    <div className={s.loginBlock}>\r\n                    <NavLink to={'/login'}>\r\n                        {'Log-in'}\r\n                    </NavLink>\r\n                    </div>\r\n                }\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport Header from './Header'\r\nimport { deleteLoginData } from '../../Redux/authReducer'\r\nimport { connect } from 'react-redux'\r\nimport { getIsAuth, getUserAvatar, getUserLogin } from '../../Redux/authSelectors'\r\n\r\n\r\nfunction HeaderContainer(props) {\r\n    return <Header {...props}/>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: getIsAuth(state),\r\n    login: getUserLogin(state),\r\n    avatar: getUserAvatar(state)\r\n    }),\r\n    AC = {deleteLoginData}\r\n\r\nexport default connect(mapStateToProps, AC)(HeaderContainer)","import { getAuthenticationData } from './authReducer'\r\n\r\nconst SET_INITIALIZED = 'app/SET_INITIALIZED'\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({\r\n        type: SET_INITIALIZED\r\n    }),\r\n\r\n    initializeApp = () => async (dispatch) => {\r\n        let promise = dispatch(getAuthenticationData())\r\n        await Promise.all([promise])\r\n        dispatch(initializedSuccess())\r\n    }\r\n\r\n\r\nexport default appReducer","import React from 'react'\r\nimport s from './Contacts.module.css'\r\n\r\nconst Contacts = (props) => {\r\n    let contactsArr = []\r\n    for (let key in props.contacts) {\r\n        if (props.contacts[key]) {\r\n            contactsArr.push(\r\n                <div>\r\n                    <label>{key}</label>\r\n                    <div><a href={'https://' + props.contacts[key]}>{`${props.contacts[key]}`}</a></div>\r\n                </div>\r\n            )\r\n        }\r\n        if (contactsArr[0] === null){return <div>Нет контактов</div>}\r\n    }\r\n    return <div className={s.contacts}>\r\n        <base target=\"_blank\"/>\r\n        {contactsArr}\r\n        </div>\r\n}\r\n\r\nexport default Contacts","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { FormControl } from '../../Common/FormsControls/FormsControls'\r\n\r\nconst ProfileSttusForm = (handleSubmit) => {\r\n        return (\r\n            <form>\r\n                <Field component={FormControl}\r\n                       typeField={'input'}\r\n                       name={'status'}\r\n                       placeholder={'Введите статус'}\r\n                       autoFocus\r\n                       onBlur={handleSubmit.onSubmit}/>\r\n            </form>\r\n        )\r\n    },\r\n    ProfileStatusReduxForm = reduxForm({form: 'status'})(ProfileSttusForm)\r\nexport default ProfileStatusReduxForm","import React, { useEffect, useState } from 'react'\r\nimport ProfileStatusReduxForm from './ProfileStatusForm'\r\n\r\nconst ProfileStatus = ({status, ...props}) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    const activateEditMode = () => {\r\n            setEditMode(true)\r\n        },\r\n        onSubmit = (status) => {\r\n            props.updateUserStatus(status.currentTarget.value)\r\n            setEditMode(false)\r\n        }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode && <div>\r\n                <span onDoubleClick={activateEditMode}>{status || 'Введите статус'}</span>\r\n            </div>\r\n            }\r\n            {editMode && <ProfileStatusReduxForm onSubmit={onSubmit}\r\n                                                 initialValues={{status: status}}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from '../../Common/Preloader/Preloader'\r\nimport demonJPG from './../../../assets/images/demon-face.jpg'\r\nimport Contacts from './Contacts/Contacts'\r\nimport ProfileStatus from './ProfileStatus'\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={s.profile}>\r\n            <span className={s.avatarPhoto}>\r\n                <img src={props.profile.photos.large ? props.profile.photos.large : demonJPG}/>\r\n            </span>\r\n            <span className={s.profileInfo}>\r\n                    <div className={s.profileName}>{props.profile.fullName}</div>\r\n                <div className={s.profileAboutMe}>\r\n                    <ProfileStatus status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n                </div>\r\n                    <div className={s.profileAboutMe}>\r\n                        {props.profile.aboutMe ?\r\n                            'О себе: ' + props.profile.aboutMe :\r\n                            'О себе ничего сказать не могу'}\r\n                    </div>\r\n                    <div className={s.profileLookingForAJob}>\r\n                        {props.profile.lookingForAJob ?\r\n                            `Я ищу работу: ${props.profile.lookingForAJobDescription}` :\r\n                            'Я не ищу работу'}\r\n                    </div>\r\n                    <div> {'Контакты: '}\r\n                        <Contacts contacts={props.profile.contacts}/>\r\n                    </div>\r\n                </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n                <div className={s.item}>\r\n                    <img src='https://www.kindpng.com/picc/m/421-4212275_transparent-default-avatar-png-avatar-img-png-download.png'/>\r\n                    {props.message}\r\n                    <div className={s.like}>\r\n                        <img src='https://img.icons8.com/pastel-glyph/2x/facebook-like.png' />\r\n                        <span>{props.likesCount}</span>\r\n                    </div>\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport { reduxForm } from 'redux-form'\r\nimport SendTextForm from '../../Common/SendTextForm/SendTextForm'\r\n\r\nconst MyPosts = (props) => {\r\n    let myPostsElement = props.myPosts.map(p => <Post message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    const addPost = (data) => props.addPost(data.textArea),\r\n        AddPostForm = reduxForm({form:'myPost'})(SendTextForm)\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostForm onSubmit={addPost}\r\n                             btnText={'Add post'} placeholderText={'Your new post'}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {myPostsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import React from 'react'\r\nimport { addPost} from '../../../Redux/profileReducer'\r\nimport MyPosts from './MyPosts'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { getUserPosts } from '../../../Redux/ProfileSelector'\r\n\r\nconst mapStateToProps = (state) => {\r\n        return {\r\n            myPosts: getUserPosts(state)\r\n        }\r\n    },\r\n    AC={addPost}\r\n\r\n    export default compose(\r\n        connect(mapStateToProps, AC),\r\n        React.memo)(MyPosts)","import React from 'react'\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './My posts/MyPostsContainer'\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateUserStatus={props.updateUserStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React, { useEffect } from 'react'\r\nimport Profile from './Profile'\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from '../../Redux/profileReducer'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\nimport { getAuthUserID, getIsAuth } from '../../Redux/authSelectors'\r\nimport { getUserProfileFromState, getUserStatusFromState } from '../../Redux/ProfileSelector'\r\n\r\nconst ProfileContainer = (props) => {\r\n    useEffect(() => {\r\n        let userID = props.match.params.userID\r\n        if (!userID) {\r\n            if(!props.isAuth){\r\n                props.history.push('/login')\r\n            }\r\n            userID = props.authID\r\n        }\r\n        props.getUserProfile(userID)\r\n        props.getUserStatus(userID)\r\n    },[props.match.params.userID,props.isAuth])\r\n\r\n    return <Profile {...props}\r\n                    profile={props.profile}\r\n                    status={props.status}\r\n                    updateUserStatus={props.updateUserStatus}/>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n        authID: getAuthUserID(state),\r\n        isAuth: getIsAuth(state),\r\n        profile: getUserProfileFromState(state),\r\n        status: getUserStatusFromState(state)\r\n    }),\r\n    AC = {getUserProfile, getUserStatus, updateUserStatus}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, AC),\r\n    withRouter\r\n)(ProfileContainer)","import React, { Suspense, useEffect } from 'react'\r\nimport './App.css'\r\nimport News from './Components/News/News'\r\nimport Music from './Components/Music/Music'\r\nimport { Route } from 'react-router-dom'\r\nimport FriendPage from './Components/FriendPage/FriendPage'\r\nimport NavbarContainer from './Components/Navbar/NavbarContainer'\r\nimport HeaderContainer from './Components/Header/HeaderContainer'\r\nimport { connect } from 'react-redux'\r\nimport { initializeApp } from './Redux/appReducer'\r\nimport Preloader from './Components/Common/Preloader/Preloader'\r\nimport ProfileContainer from './Components/Profile/ProfileContainer'\r\n\r\nconst DialogsContainer = React.lazy(() => import('./Components/Dialogs/DialogsContainer')),\r\n    LoginContainer = React.lazy(() => import('./Components/Login/LoginContainer')),\r\n    SettingsContainer = React.lazy(() => import('./Components/Settings/SettingsContainer')),\r\n    UsersContainer = React.lazy(() => import('./Components/Users/UsersContainer')),\r\n\r\n    App = (props) => {\r\n        useEffect(() => {\r\n            props.initializeApp()\r\n        }, [props.initialized])\r\n        if (!props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <NavbarContainer/>\r\n                <div className='app-wrapper-content'>\r\n                    <Suspense fallback={<Preloader/>}>\r\n                        <section>\r\n                            <Route path={'/login/'} render={() => <LoginContainer/>}/>\r\n                            <Route path={'/settings'} render={() => <SettingsContainer/>}/>\r\n                            <Route path={'/dialogs'} render={() => <DialogsContainer/>}/>\r\n                            <Route path={'/users'} render={() => <UsersContainer/>}/>\r\n                        </section>\r\n                    </Suspense>\r\n                    <Route path={'/friend/'} render={() => <FriendPage/>}/>\r\n                    <Route path={'/profile/:userID?'} render={() => <ProfileContainer/>}/>\r\n                    <Route path={'/news'} component={News}/>\r\n                    <Route path={'/music'} component={Music}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\nconst mapStateToProps = (state) => ({\r\n        initialized: state.app.initialized\r\n    }),\r\n    AC = {initializeApp}\r\n\r\nexport default connect(mapStateToProps, AC)(App)\r\n","let initialState = {\r\n    friendsList: [\r\n        {id: 1, friend: 'Baal'},\r\n        {id: 2, friend: 'Asmoday'},\r\n        {id: 3, friend: 'Velzevul'},\r\n        {id: 4, friend: 'Bifrons'},\r\n        {id: 5, friend: 'Abigor'},\r\n        {id: 6, friend: 'Agares'},\r\n        {id: 7, friend: 'Barbatos'}\r\n    ]}\r\nconst navbarReducer = (state = initialState, action) => {\r\n\r\n    return state\r\n}\r\n\r\nexport default navbarReducer","import { applyMiddleware, combineReducers, compose, createStore } from 'redux'\r\nimport profileReducer from './profileReducer'\r\nimport dialogsReducer from './dialogsReducer'\r\nimport navbarReducer from './navbarReducer'\r\nimport usersReducer from './usersReducer'\r\nimport authenticationReducer from './authReducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from './appReducer'\r\n\r\nconst reducers = combineReducers({\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        navbarPage: navbarReducer,\r\n        usersPage: usersReducer,\r\n        authentication: authenticationReducer,\r\n        app: appReducer,\r\n\r\n        form: formReducer\r\n    }),\r\n\r\n    composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose,\r\n\r\n    store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n/*    store = createStore(reducers, applyMiddleware(thunkMiddleware))*/\r\nwindow.__store = store\r\n\r\nexport default store","import * as serviceWorker from './serviceWorker'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport store from './Redux/reduxStore'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__WF7yf\",\"avatarPhoto\":\"ProfileInfo_avatarPhoto__mvDdw\",\"profileInfo\":\"ProfileInfo_profileInfo__1Xayc\",\"profileName\":\"ProfileInfo_profileName__1SMjL\",\"profileAboutMe\":\"ProfileInfo_profileAboutMe__2Hdhc\",\"profileLookingForAJob\":\"ProfileInfo_profileLookingForAJob__3Onls\"};","export const getAuthUserID = (state) => {\r\n    return state.authentication.id\r\n}, getIsAuth= (state) => {\r\n    return state.authentication.isAuth\r\n},getCaptcha = (state) => {\r\n    return state.authentication.captcha\r\n},getUserLogin = (state) => {\r\n    return state.authentication.login\r\n}, getUserAvatar = (state) => {\r\n    return state.authentication.avatar\r\n}","import { authenticationAPIComponent, profileAPIComponent } from '../API/API'\r\nimport { stopSubmit } from 'redux-form'\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DAT',\r\n    SET_USER_AVATAR = 'auth/SET_USER_AVATAR',\r\n    SET_CAPTCHA_IMG = 'auth/SET_CAPTCHA_IMG'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    captcha: null,\r\n    isAuth: false\r\n}\r\nconst authenticationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case SET_USER_AVATAR:\r\n            return {\r\n                ...state,\r\n                avatar: action.avatar\r\n            }\r\n        case SET_CAPTCHA_IMG:\r\n            return {\r\n                ...state,\r\n                captcha: action.url\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userID, email, login, isAuth) => ({\r\n        type: SET_USER_DATA,\r\n        payload: {id: userID, email, login, isAuth}\r\n    }), setAuthUserAvatar = (avatar) => ({\r\n        type: SET_USER_AVATAR,\r\n        avatar\r\n    }), setCaptchaImg = (url) => ({\r\n        type: SET_CAPTCHA_IMG,\r\n        url\r\n    }),\r\n\r\n\r\n    getAuthenticationData = () => async (dispatch) => {\r\n        let response = await authenticationAPIComponent.getAuthenticationData()\r\n        if (response.resultCode === 0) {\r\n            let {id, email, login} = response.data\r\n            dispatch(setAuthUserData(id, email, login, true))\r\n            let profile = await profileAPIComponent.getUserProfile(id)\r\n            dispatch(setAuthUserAvatar(profile.photos.small))\r\n        }\r\n    },\r\n    postLoginData = (formData) => async (dispatch) => {\r\n        let response = await authenticationAPIComponent.loginUser(formData)\r\n        if (response.resultCode === 0) {\r\n            dispatch(getAuthenticationData())\r\n        } else if (response.resultCode === 10) {\r\n            let captcha = await authenticationAPIComponent.getCaptcha()\r\n            dispatch(setCaptchaImg(captcha.url))\r\n            dispatch(stopSubmit('login', {_error: response.messages}))\r\n        } else {\r\n            dispatch(stopSubmit('login', {_error: response.messages}))\r\n        }\r\n    },\r\n    deleteLoginData = () => async (dispatch) => {\r\n        let response = await authenticationAPIComponent.logoutUser()\r\n        if (response.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n            dispatch(setCaptchaImg(null))\r\n        }\r\n    }\r\n\r\n\r\nexport default authenticationReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Vpsa\",\"loginBlock\":\"Header_loginBlock__V3D9M\",\"Login\":\"Header_Login__2SSHF\",\"Avatar\":\"Header_Avatar__2MdaM\"};","import loading from '../../../assets/images/Loading.svg'\r\nimport React from 'react'\r\n\r\nconst Preloader = (props) => {\r\n    return  <div><img src={loading}/></div>\r\n}\r\n\r\nexport default Preloader","export const getUserProfileFromState = (state) => {\r\n    return state.profilePage.profile\r\n}, getUserStatusFromState = (state) => {\r\n    return state.profilePage.status\r\n}, getUserPosts = (state) => {\r\n    return state.profilePage.myPosts\r\n}","import React from 'react'\r\nimport s from './FormControls.module.css'\r\n\r\nexport const FormControl = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error:'')}>\r\n            <div>\r\n                {React.createElement(`${props.typeField}`, {...input, ...props})}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__1MB75\",\"error\":\"FormControls_error__QtX38\",\"formSummaryError\":\"FormControls_formSummaryError__1clJK\"};","export const required = (value) => {\r\n        if (value) return undefined\r\n        return 'Field is required'\r\n    },\r\n\r\n    maxLengthCreator = (maxLength) => (value) => {\r\n        if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n        return undefined\r\n    }\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"FriendsList_heading__lA4Pp\",\"friendList\":\"FriendsList_friendList__2YDSZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3Vf2-\",\"posts\":\"MyPosts_posts__eqEEH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__kMB0W\",\"like\":\"Post_like__3V1OC\"};"],"sourceRoot":""}